/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.sharedtestproject.sampledb33;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Sample generated by hbm2java
 */
@Entity
@Table(name="`sample`"
)

public class Sample  implements java.io.Serializable {

    
    private Integer id;
    
    private String sample1;
    
    private byte[] blobtype;
    
    private Date timecol;

    public Sample() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`ID`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    

    @Column(name="`sample1`")
    public String getSample1() {
        return this.sample1;
    }
    
    public void setSample1(String sample1) {
        this.sample1 = sample1;
    }

    

    @Column(name="`blobtype`")
    public byte[] getBlobtype() {
        return this.blobtype;
    }
    
    public void setBlobtype(byte[] blobtype) {
        this.blobtype = blobtype;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`timecol`", length=8)
    public Date getTimecol() {
        return this.timecol;
    }
    
    public void setTimecol(Date timecol) {
        this.timecol = timecol;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Sample) )
		    return false;

		 Sample that = (Sample) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

