/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.sharedtestproject.classicmodels;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name="`employees`"
)

public class Employees  implements java.io.Serializable {

    
    private Integer employeeNumber;
    
    private String lastName;
    
    private String firstName;
    
    private String extension;
    
    private String email;
    
    private String jobTitle;
    
    private Employees employeesByReportsTo;
    
    private Set<Employees> employeesesForReportsTo = new HashSet<Employees>(0);
    
    private Offices offices;
    
    private Set<Customers> customerses = new HashSet<Customers>(0);

    public Employees() {
    }


    @Id 
    

    @Column(name="`employeeNumber`", precision=10)
    public Integer getEmployeeNumber() {
        return this.employeeNumber;
    }
    
    public void setEmployeeNumber(Integer employeeNumber) {
        this.employeeNumber = employeeNumber;
    }

    

    @Column(name="`lastName`", length=50)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    

    @Column(name="`firstName`", length=50)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    

    @Column(name="`extension`", length=10)
    public String getExtension() {
        return this.extension;
    }
    
    public void setExtension(String extension) {
        this.extension = extension;
    }

    

    @Column(name="`email`", length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    

    @Column(name="`jobTitle`", length=50)
    public String getJobTitle() {
        return this.jobTitle;
    }
    
    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`reportsTo`")
    @JsonIgnoreProperties({"employeesByReportsTo", "employeesesForReportsTo"})
    public Employees getEmployeesByReportsTo() {
        return this.employeesByReportsTo;
    }
    
    public void setEmployeesByReportsTo(Employees employeesByReportsTo) {
        this.employeesByReportsTo = employeesByReportsTo;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employeesByReportsTo")
    public Set<Employees> getEmployeesesForReportsTo() {
        return this.employeesesForReportsTo;
    }
    
    public void setEmployeesesForReportsTo(Set<Employees> employeesesForReportsTo) {
        this.employeesesForReportsTo = employeesesForReportsTo;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`officeCode`")
    public Offices getOffices() {
        return this.offices;
    }
    
    public void setOffices(Offices offices) {
        this.offices = offices;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employees")
    public Set<Customers> getCustomerses() {
        return this.customerses;
    }
    
    public void setCustomerses(Set<Customers> customerses) {
        this.customerses = customerses;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Employees) )
		    return false;

		 Employees that = (Employees) o;

		 return ( (this.getEmployeeNumber()==that.getEmployeeNumber()) || ( this.getEmployeeNumber()!=null && that.getEmployeeNumber()!=null && this.getEmployeeNumber().equals(that.getEmployeeNumber()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getEmployeeNumber() == null ? 0 : this.getEmployeeNumber().hashCode() );

         return result;
    }


}

