/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.sharedtestproject.classicmodels;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Payments generated by hbm2java
 */
@Entity
@Table(name="`payments`"
)
@IdClass(value=PaymentsId.class)
public class Payments  implements java.io.Serializable {

    
    private Integer customerNumber;
    
    private String checkNumber;
    
    private Date paymentDate;
    
    private BigDecimal amount;
    
    private Customers customers;

    public Payments() {
    }


    @Id 
    

    @Column(name="`customerNumber`", insertable=false, updatable=false, precision=10)
    public Integer getCustomerNumber() {
        return this.customerNumber;
    }
    
    public void setCustomerNumber(Integer customerNumber) {
        this.customerNumber = customerNumber;
    }
    @Id 
    

    @Column(name="`checkNumber`", insertable=false, updatable=false, length=50)
    public String getCheckNumber() {
        return this.checkNumber;
    }
    
    public void setCheckNumber(String checkNumber) {
        this.checkNumber = checkNumber;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`paymentDate`", length=10)
    public Date getPaymentDate() {
        return this.paymentDate;
    }
    
    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }

    

    @Column(name="`amount`", precision=22, scale=9)
    public BigDecimal getAmount() {
        return this.amount;
    }
    
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`customerNumber`", insertable=false, updatable=false)
    public Customers getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Customers customers) {
        
        this.customerNumber = customers.getCustomerNumber();
      
        this.customers = customers;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Payments) )
		    return false;

		 Payments that = (Payments) o;

         return ( (this.getCustomerNumber()==that.getCustomerNumber()) || ( this.getCustomerNumber()!=null && that.getCustomerNumber()!=null && this.getCustomerNumber().equals(that.getCustomerNumber()) ) )
 && ( (this.getCheckNumber()==that.getCheckNumber()) || ( this.getCheckNumber()!=null && that.getCheckNumber()!=null && this.getCheckNumber().equals(that.getCheckNumber()) ) )
 && ( (this.getPaymentDate()==that.getPaymentDate()) || ( this.getPaymentDate()!=null && that.getPaymentDate()!=null && this.getPaymentDate().equals(that.getPaymentDate()) ) )
 && ( (this.getAmount()==that.getAmount()) || ( this.getAmount()!=null && that.getAmount()!=null && this.getAmount().equals(that.getAmount()) ) )
 && ( (this.getCustomers()==that.getCustomers()) || ( this.getCustomers()!=null && that.getCustomers()!=null && this.getCustomers().equals(that.getCustomers()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCustomerNumber() == null ? 0 : this.getCustomerNumber().hashCode() );
         result = 37 * result + ( getCheckNumber() == null ? 0 : this.getCheckNumber().hashCode() );
         result = 37 * result + ( getPaymentDate() == null ? 0 : this.getPaymentDate().hashCode() );
         result = 37 * result + ( getAmount() == null ? 0 : this.getAmount().hashCode() );
         result = 37 * result + ( getCustomers() == null ? 0 : this.getCustomers().hashCode() );

         return result;
    }


}

