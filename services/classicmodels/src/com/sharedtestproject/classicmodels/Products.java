/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.sharedtestproject.classicmodels;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Products generated by hbm2java
 */
@Entity
@Table(name="`products`"
)

public class Products  implements java.io.Serializable {

    
    private String productCode;
    
    private String productName;
    
    private String productScale;
    
    private String productVendor;
    
    private String productDescription;
    
    private Short quantityInStock;
    
    private BigDecimal buyPrice;
    
    private BigDecimal msrp;
    
    private Productlines productlines;
    
    private Set<Orderdetails> orderdetailses = new HashSet<Orderdetails>(0);

    public Products() {
    }


    @Id 
    

    @Column(name="`productCode`", length=15)
    public String getProductCode() {
        return this.productCode;
    }
    
    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    

    @Column(name="`productName`", length=70)
    public String getProductName() {
        return this.productName;
    }
    
    public void setProductName(String productName) {
        this.productName = productName;
    }

    

    @Column(name="`productScale`", length=10)
    public String getProductScale() {
        return this.productScale;
    }
    
    public void setProductScale(String productScale) {
        this.productScale = productScale;
    }

    

    @Column(name="`productVendor`", length=50)
    public String getProductVendor() {
        return this.productVendor;
    }
    
    public void setProductVendor(String productVendor) {
        this.productVendor = productVendor;
    }

    

    @Column(name="`productDescription`", length=65535)
    public String getProductDescription() {
        return this.productDescription;
    }
    
    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    

    @Column(name="`quantityInStock`", precision=5)
    public Short getQuantityInStock() {
        return this.quantityInStock;
    }
    
    public void setQuantityInStock(Short quantityInStock) {
        this.quantityInStock = quantityInStock;
    }

    

    @Column(name="`buyPrice`", precision=22, scale=9)
    public BigDecimal getBuyPrice() {
        return this.buyPrice;
    }
    
    public void setBuyPrice(BigDecimal buyPrice) {
        this.buyPrice = buyPrice;
    }

    

    @Column(name="`MSRP`", precision=22, scale=9)
    public BigDecimal getMsrp() {
        return this.msrp;
    }
    
    public void setMsrp(BigDecimal msrp) {
        this.msrp = msrp;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`productLine`")
    public Productlines getProductlines() {
        return this.productlines;
    }
    
    public void setProductlines(Productlines productlines) {
        this.productlines = productlines;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="products")
    public Set<Orderdetails> getOrderdetailses() {
        return this.orderdetailses;
    }
    
    public void setOrderdetailses(Set<Orderdetails> orderdetailses) {
        this.orderdetailses = orderdetailses;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Products) )
		    return false;

		 Products that = (Products) o;

		 return ( (this.getProductCode()==that.getProductCode()) || ( this.getProductCode()!=null && that.getProductCode()!=null && this.getProductCode().equals(that.getProductCode()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getProductCode() == null ? 0 : this.getProductCode().hashCode() );

         return result;
    }


}

