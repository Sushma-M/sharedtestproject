/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.sharedtestproject.classicmodels;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Orderdetails generated by hbm2java
 */
@Entity
@Table(name="`orderdetails`"
)
@IdClass(value=OrderdetailsId.class)
public class Orderdetails  implements java.io.Serializable {

    
    private Integer orderNumber;
    
    private String productCode;
    
    private Integer quantityOrdered;
    
    private BigDecimal priceEach;
    
    private Short orderLineNumber;
    
    private Orders orders;
    
    private Products products;

    public Orderdetails() {
    }


    @Id 
    

    @Column(name="`orderNumber`", insertable=false, updatable=false, precision=10)
    public Integer getOrderNumber() {
        return this.orderNumber;
    }
    
    public void setOrderNumber(Integer orderNumber) {
        this.orderNumber = orderNumber;
    }
    @Id 
    

    @Column(name="`productCode`", insertable=false, updatable=false, length=15)
    public String getProductCode() {
        return this.productCode;
    }
    
    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    

    @Column(name="`quantityOrdered`", precision=10)
    public Integer getQuantityOrdered() {
        return this.quantityOrdered;
    }
    
    public void setQuantityOrdered(Integer quantityOrdered) {
        this.quantityOrdered = quantityOrdered;
    }

    

    @Column(name="`priceEach`", precision=22, scale=9)
    public BigDecimal getPriceEach() {
        return this.priceEach;
    }
    
    public void setPriceEach(BigDecimal priceEach) {
        this.priceEach = priceEach;
    }

    

    @Column(name="`orderLineNumber`", precision=5)
    public Short getOrderLineNumber() {
        return this.orderLineNumber;
    }
    
    public void setOrderLineNumber(Short orderLineNumber) {
        this.orderLineNumber = orderLineNumber;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`orderNumber`", insertable=false, updatable=false)
    public Orders getOrders() {
        return this.orders;
    }
    
    public void setOrders(Orders orders) {
        
        this.orderNumber = orders.getOrderNumber();
      
        this.orders = orders;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`productCode`", insertable=false, updatable=false)
    public Products getProducts() {
        return this.products;
    }
    
    public void setProducts(Products products) {
        
        this.productCode = products.getProductCode();
      
        this.products = products;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Orderdetails) )
		    return false;

		 Orderdetails that = (Orderdetails) o;

         return ( (this.getOrderNumber()==that.getOrderNumber()) || ( this.getOrderNumber()!=null && that.getOrderNumber()!=null && this.getOrderNumber().equals(that.getOrderNumber()) ) )
 && ( (this.getProductCode()==that.getProductCode()) || ( this.getProductCode()!=null && that.getProductCode()!=null && this.getProductCode().equals(that.getProductCode()) ) )
 && ( (this.getQuantityOrdered()==that.getQuantityOrdered()) || ( this.getQuantityOrdered()!=null && that.getQuantityOrdered()!=null && this.getQuantityOrdered().equals(that.getQuantityOrdered()) ) )
 && ( (this.getPriceEach()==that.getPriceEach()) || ( this.getPriceEach()!=null && that.getPriceEach()!=null && this.getPriceEach().equals(that.getPriceEach()) ) )
 && ( (this.getOrderLineNumber()==that.getOrderLineNumber()) || ( this.getOrderLineNumber()!=null && that.getOrderLineNumber()!=null && this.getOrderLineNumber().equals(that.getOrderLineNumber()) ) )
 && ( (this.getOrders()==that.getOrders()) || ( this.getOrders()!=null && that.getOrders()!=null && this.getOrders().equals(that.getOrders()) ) )
 && ( (this.getProducts()==that.getProducts()) || ( this.getProducts()!=null && that.getProducts()!=null && this.getProducts().equals(that.getProducts()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getOrderNumber() == null ? 0 : this.getOrderNumber().hashCode() );
         result = 37 * result + ( getProductCode() == null ? 0 : this.getProductCode().hashCode() );
         result = 37 * result + ( getQuantityOrdered() == null ? 0 : this.getQuantityOrdered().hashCode() );
         result = 37 * result + ( getPriceEach() == null ? 0 : this.getPriceEach().hashCode() );
         result = 37 * result + ( getOrderLineNumber() == null ? 0 : this.getOrderLineNumber().hashCode() );
         result = 37 * result + ( getOrders() == null ? 0 : this.getOrders().hashCode() );
         result = 37 * result + ( getProducts() == null ? 0 : this.getProducts().hashCode() );

         return result;
    }


}

